name: Tests de Comandos en Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      
    - name: Configurar entorno
      run: |
        echo "Estructura del repositorio:"
        find . -type f -name "*.sh" | sort
        echo "Preparando archivos para Docker:"
        chmod +x ./tests/*.sh
        chmod +x ./ejercicios/*.sh
        
    - name: Crear Dockerfile
      run: |
        cat > Dockerfile << 'EOF'
        FROM ubuntu:latest
        
        # Instalar dependencias
        RUN apt-get update && apt-get install -y \
            bash \
            coreutils \
            procps \
            findutils \
            grep \
            && rm -rf /var/lib/apt/lists/*
        
        # Crear estructura de directorios
        WORKDIR /app
        RUN mkdir -p /app/ejercicios /app/tests
        
        # Copiar archivos
        COPY ejercicios/ /app/ejercicios/
        COPY tests/ /app/tests/
        
        # Dar permisos de ejecución
        RUN chmod +x /app/tests/*.sh
        RUN chmod +x /app/ejercicios/*.sh
        
        # Comando por defecto
        CMD ["/bin/bash", "-c", "/app/tests/test_comandos_basicos_output.sh"]
        EOF
        
        cat Dockerfile
        
    - name: Construir imagen Docker
      run: docker build -t ejercicios-so-test .
      
    - name: Ejecutar tests en Docker
      id: test-docker
      continue-on-error: true
      run: |
        docker run --name test-container ejercicios-so-test
        EXIT_CODE=$?
        docker cp test-container:/app/test_results.md ./test_results.md 2>/dev/null || echo "# Resultados de los Tests\n\n## Comandos Básicos\n❌ **Error en la ejecución**" > test_results.md
        docker rm test-container
        exit $EXIT_CODE
      
    - name: Guardar resultados como artefacto
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test_results.md
        
    - name: Imprimir resultados en el log
      run: cat test_results.md
